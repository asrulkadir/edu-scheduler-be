name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.POSTGRES_USER }}" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 'lts/*'

    - name: Create .env file
      run: |
        echo "DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}?schema=public" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "JWT_EXPIRATION_TIME=${{ secrets.JWT_EXPIRATION_TIME }}" >> .env
        echo "CRYPTO_SECRET_KEY=${{ secrets.CRYPTO_SECRET_KEY }}" >> .env

    - name: Install dependencies
      run: npm install

    - name: Wait for PostgreSQL to be ready
      run: |
        echo "Waiting for PostgreSQL to be ready..."
        until docker exec $(docker ps -q -f "ancestor=postgres:latest") pg_isready -U ${{ secrets.POSTGRES_USER }}; do
          sleep 1
        done

    - name: Prisma migrate deploy
      run: npx prisma migrate deploy

    - name: Build the application
      run: npm run build

    - name: Login to docker hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build the Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        build-args: |
          "DATABASE_URL=${{ secrets.DATABASE_URL }}"
          "JWT_SECRET=${{ secrets.JWT_SECRET }}"
          "JWT_EXPIRATION_TIME=${{ secrets.JWT_EXPIRATION_TIME }}"
          "CRYPTO_SECRET_KEY=${{ secrets.CRYPTO_SECRET_KEY }}"
          "POSTGRES_USER=${{ secrets.POSTGRES_USER }}"
          "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}"
          "POSTGRES_DB=${{ secrets.POSTGRES_DB }}"
        tags: asrulkadir/skeduler-be:latest
        platforms: linux/amd64

    - name: Push the Docker image
      run: docker push asrulkadir/skeduler-be:latest